# docker-compose.yml
version: "3.3"

services:
  mc:
    image: itzg/minecraft-server
    ports:
      - 25565:25565
    environment:
      EULA: "TRUE"

      SERVER_NAME: "Our Minecraft Server"
      MOTD: "First Peaceful World"

      DIFFICULTY: "normal"

      # https://github.com/itzg/docker-minecraft-server#memory-limit
      MEMORY: 3G

      # uncomment this to import a saved game. (put your savegame directory in the saves-to-import directory)
      # WORLD: "/worlds/My-World"

    volumes:
      - ./minecraft-data:/data
      - ./saves-to-import:/worlds:ro

  backups:
    image: itzg/mc-backup
    environment:
      BACKUP_INTERVAL: "2h"
      # instead of network_mode below, could declare RCON_HOST
      # RCON_HOST: mc
    volumes:
      # mount the same volume used by server, but read-only
      - ./minecraft-data:/data:ro
      # use a host attached directory so that it in turn can be backed up
      # to external/cloud storage
      - ./mc-backups:/backups:rw
    # share network namespace with server to simplify rcon access
    network_mode: "service:mc"

  nginx:
    image: nginx:stable-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./overviewer-data:/usr/share/nginx/html:ro
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"